
import uuid
class characters:
    def __init__(self, name, skill, type):
        self.name = name
        self.skill = skill      
        self.type = type
    def __str__(self):
        return f"{self.name},{self.skill},{self.type}"
class Main_characters(characters):
    def __init__(self, name, skill, type, main):
        super().__init__(name,skill, type)
        self.main= main
    def __str__(self):
        return f"{self.name},{self.skill},{self.type}, {self.main}"
class friends(characters):
    def __init__(self, name, skill, type, status1):
        super().__init__(name,skill, type)
        self.status = status1
class enemies(characters):
    def __init__(self, name, skill, type, status2):
        super().__init__(name,skill, type)
        self.status2 = status2

main_characters= []
all_friends= []
all_enemies= []

def create_main(name, skill, type, main):
    new_main = Main_characters(name, skill, type, main)
    main_characters.append(new_main)
    for characters in main_characters:
        print(characters)

def create_friends(name, skill, status1):
    new_friends = friends(name, skill, type, status1)
    all_friends.append(new_friends)
    for friends in all_friends:
        print(friends)

def create_enemies(name, skill, type, status2):
    new_enemies = enemies(name, skill, type, status2)
    all_enemies.append(new_enemies)
    for enemies in all_enemies:
        print(enemies)


add_hero = "Y"


while add_hero == 'Y':
    user_request = input("Do you want to add the main character? Y/N: ")
    if user_request == "Y":
      name = "Hello Kitty"
      skill = "Battling"
      type = "Hero"
      main = "Main character"
      create_main(name, skill, type, main)
    if user_request == "N":
       pass
    else:
       print("invalid")
      

add_enemies = "Y"

while add_enemies =="Y":
    user_request = input("Do you want to add enemies?Y/N: ")
    if user_request == "Y":
      name = "My Melody"
      skill = "Handstand endurance"
      type = "Enemy"
      status2= "Infected"
      create_enemies(name, skill, type, status2)
      name = "Mimmy"
      skill = "Karate"
      type = "Enemy"
      status2= "Infected"
      create_enemies(name, skill, type, status2)
      name = "Pompompurin"
      skill = "Bubblegum competition"
      type = "Enemy"
      status2= "Infected"
      create_main(name, skill, type, status2)
    if user_request == "N":
       pass
    else:
       print("invalid")

